{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NubiaFerreira\\\\Desktop\\\\extras react\\\\auth-project\\\\src\\\\store\\\\auth-context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\n\nconst calculateRemainingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\n\nexport const AuthContextProvider = props => {\n  _s();\n\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n  };\n\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainingTime = calculateRemainingTime(expirationTime);\n    setTimeout(logoutHandler, 300);\n  };\n\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n\n_c = AuthContextProvider;\nexport default AuthContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/NubiaFerreira/Desktop/extras react/auth-project/src/store/auth-context.js"],"names":["React","useState","AuthContext","createContext","token","isLoggedIn","login","logout","calculateRemainingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","AuthContextProvider","props","initialToken","localStorage","getItem","setToken","userIsLoggedIn","logoutHandler","removeItem","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAN,CAAoB;AACpCC,EAAAA,KAAK,EAAE,EAD6B;AAEpCC,EAAAA,UAAU,EAAE,KAFwB;AAGpCC,EAAAA,KAAK,EAAGF,KAAD,IAAW,CAAE,CAHgB;AAIpCG,EAAAA,MAAM,EAAE,MAAM,CAAE;AAJoB,CAApB,CAApB;;AAOA,MAAMC,sBAAsB,GAAIC,cAAD,IAAoB;AAC/C,QAAMC,WAAW,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA,QAAMC,iBAAiB,GAAG,IAAIF,IAAJ,CAASF,cAAT,EAAyBG,OAAzB,EAA1B;AAEA,QAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAA9C;AAEA,SAAOI,iBAAP;AACH,CAPD;;AASA,OAAO,MAAMC,mBAAmB,GAAIC,KAAD,IAAW;AAAA;;AAC1C,QAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAArB;AACA,QAAM,CAACf,KAAD,EAAQgB,QAAR,IAAoBnB,QAAQ,CAACgB,YAAD,CAAlC;AAEA,QAAMI,cAAc,GAAG,CAAC,CAACjB,KAAzB;;AAEA,QAAMkB,aAAa,GAAG,MAAM;AACxBF,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,YAAY,CAACK,UAAb,CAAwB,OAAxB;AACH,GAHD;;AAKA,QAAMC,YAAY,GAAG,CAACpB,KAAD,EAAQK,cAAR,KAA2B;AAC5CW,IAAAA,QAAQ,CAAChB,KAAD,CAAR;AACAc,IAAAA,YAAY,CAACO,OAAb,CAAqB,OAArB,EAA8BrB,KAA9B;AAEA,UAAMsB,aAAa,GAAGlB,sBAAsB,CAACC,cAAD,CAA5C;AAEAkB,IAAAA,UAAU,CAACL,aAAD,EAAgB,GAAhB,CAAV;AACH,GAPD;;AASA,QAAMM,YAAY,GAAG;AACjBxB,IAAAA,KAAK,EAAEA,KADU;AAEjBC,IAAAA,UAAU,EAAEgB,cAFK;AAGjBf,IAAAA,KAAK,EAAEkB,YAHU;AAIjBjB,IAAAA,MAAM,EAAEe;AAJS,GAArB;AAOA,sBACI,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEM,YAA7B;AAAA,cACKZ,KAAK,CAACa;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAhCM;;GAAMd,mB;;KAAAA,mB;AAkCb,eAAeb,WAAf","sourcesContent":["import React, {useState} from \"react\"\r\n\r\nconst AuthContext = React.createContext({\r\n    token: '',\r\n    isLoggedIn: false,\r\n    login: (token) => {},\r\n    logout: () => {}\r\n})\r\n\r\nconst calculateRemainingTime = (expirationTime) => {\r\n    const currentTime = new Date().getTime()\r\n    const adjExpirationTime = new Date(expirationTime).getTime()\r\n\r\n    const remainingDuration = adjExpirationTime - currentTime\r\n\r\n    return remainingDuration\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const initialToken = localStorage.getItem('token')\r\n    const [token, setToken] = useState(initialToken)\r\n\r\n    const userIsLoggedIn = !!token\r\n    \r\n    const logoutHandler = () => {\r\n        setToken(null)\r\n        localStorage.removeItem('token')\r\n    }\r\n\r\n    const loginHandler = (token, expirationTime) => {\r\n        setToken(token)\r\n        localStorage.setItem('token', token)\r\n\r\n        const remainingTime = calculateRemainingTime(expirationTime)\r\n\r\n        setTimeout(logoutHandler, 300)\r\n    }\r\n\r\n    const contextValue = {\r\n        token: token,\r\n        isLoggedIn: userIsLoggedIn,\r\n        login: loginHandler,\r\n        logout: logoutHandler\r\n    }\r\n\r\n    return (\r\n        <AuthContext.Provider value={contextValue}>\r\n            {props.children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\nexport default AuthContext"]},"metadata":{},"sourceType":"module"}